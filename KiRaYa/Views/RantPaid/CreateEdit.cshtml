@model KiRaYa.Models.RantPaid
@using KiRaYa.Models
<div class="card">
    <div class="card-header">
        <h4 style="text-align:center;color:#000000"><b>  RantPaid</b></h4>
        <hr />
    </div>
    <div class="card-body">


        @using (Html.BeginForm(Html.BeginForm("SentMail", "RantPaid", FormMethod.Post, new { enctype = "multipart/form-data" })))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.RPID)
        <div class="row">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @Html.ValidationMessageFor(model => model.RPID, "", new { @class = "text-danger" })
            <div class="col-md-4">
                @Html.Label("Block Name")

                @Html.DropDownListFor(model => model.DDID, new SelectList(new BlockD().GetAll(), "DDID", "Name", Model.DDID), "Select Block", new { @class = "form-control", required = "required" })

                @Html.ValidationMessageFor(model => model.DDID, "", new { @class = "text-danger" })

            </div>

            <div class="col-md-4">
                @Html.Label("Retal Name")

                @Html.DropDownListFor(model => model.RantalID, new SelectList(new Rental().GetAll(), "RantalID", "Name", Model.RantalID), "Select Rental", new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.RantalID, "", new { @class = "text-danger" })

            </div>
            <div class="col-md-4">
                @Html.Label("Room Number")

                @Html.DropDownListFor(model => model.RID, new SelectList(new RoomTable().GetAll(), "RID", "RoomNumber", Model.RID), new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.RID, "", new { @class = "text-danger" })

            </div>
            <div class="col-md-4">
                @Html.Label("Last Reading")

                @Html.EditorFor(model => model.LastReading, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.LastReading, "", new { @class = "text-danger" })

            </div>
            <div class="col-md-4">
                @Html.Label("Current Reading")

                @Html.EditorFor(model => model.CurrentReading, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.CurrentReading, "", new { @class = "text-danger" })

            </div>
            <div class="col-md-4">
                @Html.Label("Electricity Used")

                @Html.EditorFor(model => model.UsedElectricity, new { htmlAttributes = new { @class = "form-control", onchange = "my();" } })
                @Html.ValidationMessageFor(model => model.UsedElectricity, "", new { @class = "text-danger" })

            </div>
            <div class="col-md-4">
                @Html.Label("Total Rant")

                @Html.EditorFor(model => model.TotalRant, new { htmlAttributes = new { @class = "form-control", onchange = "my();" } })
                @Html.ValidationMessageFor(model => model.TotalRant, "", new { @class = "text-danger" })

            </div>
            <div class="col-md-4">
                @Html.Label("Total Pay")
                @Html.EditorFor(model => model.TotalPay, new { htmlAttributes = new { @class = "form-control", onchange = "change();" } })
                @Html.ValidationMessageFor(model => model.TotalPay, "", new { @class = "text-danger" })

            </div>
            <div class="col-md-4">
                @Html.Label("Amount")

                @Html.EditorFor(model => model.Amt, new { htmlAttributes = new { @class = "form-control", onchange = "change();" } })
                @Html.ValidationMessageFor(model => model.Amt, "", new { @class = "text-danger" })

            </div>



            <div class=" col-sm-1">
                @Html.Label("SAVE", new { @class = "text-white" })
                <input type="submit" value="Sent MGS" class="btn btn-success" />
            </div>

        </div>
        }
    </div>
</div>
  
<script>
    $("#RantalID").on("change", function () {
        var PRID = $("#RantalID").val();
        if (PRID != "" && PRID != 0) {
            $.ajax({
                url: "/RantPaid/GetAmt",
                type: "GET",
                data: { PRID: PRID },
                success: function (data) {
                    $("#RID").html("<option value=" + data.RID + "> " + data.RoomNumber + " </option>");
                    $("#TotalRant").val(data.RantAmt);
                    $("#DDID").val(data.DDID);
                   
                    //alert(data.Name);
                },
                error: function (xhr) {
                    alert("Error");
                }
            });
        }
        else {
            $("#RID").html("<option value=0> Select Room No</option>");
            $("#Amt").val(0);


        }
    });
</script>
<script> 
    function my() {
       
        var a = document.getElementById("UsedElectricity").value;
          
        var b = document.getElementById("TotalRant").value;
        var num1 = parseInt(a);
        var num2 = parseInt(b);
        var c = num1 + num2;
         
        document.getElementById("TotalPay").value = c;
    }
    
</script>
<script>
    function change() {

        var a = document.getElementById("TotalPay").value;
         
        var b = document.getElementById("Amt").value;
       
        var num1 = parseInt(a);
        var num2 = parseInt(b);
        var c = num1 - num2;
        
        document.getElementById("Remaining").value = c;
    }

</script>


