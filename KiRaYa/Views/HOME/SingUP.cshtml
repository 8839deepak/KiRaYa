@model KiRaYa.Models.Login
@{ Layout = null;}
@using KiRaYa.Models;
@{ List<UserDetails> listuser = new UserDetails().GetAll();}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login</title>

    <link href="~/Assests/bootstrap-4.3.1/css/bootstrap.min.css" rel="stylesheet" />
    <script src="~/Assests/bootstrap-4.3.1/js/bootstrap.min.js"></script>
    <script src="~/Assests/bootstrap-4.3.1/js/jquery-3.3.1.slim.min.js"></script>
    <script src="~/Assests/bootstrap-4.3.1/js/popper.min.js"></script>
    <!--sql sever -->
    <script src="https://code.jquery.com/jquery-3.3.1.js"></script>
    <script src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
    <!--endsql sever -->
</head>
<body>

    <div class="card">
        <div class="card-header">
            <h4 style="text-align:center;color:#000000"> <b>Create User</b></h4>
            <hr />
        </div>
        <div class="card-body">

            @using (Html.BeginForm("SingUP", "HOME", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.ID)
                <div class="row">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label  " })

                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })

                    </div>

                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label  " })

                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })

                    </div>

                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.UserID, htmlAttributes: new { @class = "control-label  " })
                        @Html.EditorFor(model => model.UserID, new { htmlAttributes = new { @class = "form-control" } })

                        @*  @Html.DropDownListFor(model => model.UserID, new SelectList(new UserDetails().GetAll(), "UserID", " UserType", Model.UserID), "Select User Type", new { @class = "form-control", required = "required" })*@


                    </div>
                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.EmailID, htmlAttributes: new { @class = "control-label  " })

                        @Html.EditorFor(model => model.EmailID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })

                    </div>


                    <div class="col-sm-1  ">
                        @Html.Label("SAVE", new { @class = "text-white" })
                        <input type="submit" value="SAVE" class="btn btn-success" />
                    </div>

                </div>
            }

        </div>
    </div>
</body>
</html>