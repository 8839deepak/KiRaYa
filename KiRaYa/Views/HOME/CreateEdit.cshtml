@model KiRaYa.Models.Login
    @using KiRaYa.Models;
@{ List<UserDetails> listusertype = new UserDetails().GetAll();}
<div class="card">
    <div class="card-header">
        <h4 style="text-align:center;color:#000000"> <b>Create User</b></h4>
        <hr />
    </div>
    <div class="card-body">

        @using(Html.BeginForm("CreateEdit", "Login", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="row">
                
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="col-sm-4">
                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label  " })
                    
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                     
                </div>

                <div class="col-sm-4">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label  " })
                     
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                     
                </div>

                <div class="col-sm-4">
                    @Html.LabelFor(model => model.UserType, htmlAttributes: new { @class = "control-label  " })
                     
                        @Html.DropDownListFor(model => model.UserType, new SelectList(new UserDetails().GetAll(),"UserID", "UserType ", Model.ID ),"Select User Type",new { @class = "form-control" ,required="required"})
                        @Html.ValidationMessageFor(model => model.UserType, "", new { @class = "text-danger" })
                     
                </div>
                <div class="col-sm-4">
                    @Html.LabelFor(model => model.EmailID, htmlAttributes: new { @class = "control-label  " })
                     
                        @Html.EditorFor(model => model.EmailID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })
                    
                </div>

                
                    <div class="col-sm-1  ">
                        @Html.Label("SAVE",new {@class="text-white" })
                        <input type="submit" value="SAVE" class="btn btn-success" />
                    </div>
                
            </div>
        }

    </div>
</div>
 